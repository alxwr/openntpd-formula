{%- macro get_values(value, default_key, others_keys) %}
{%- if value is string %}{{ value }}
{%- else %}
{%- if default_key in value %}{{ value[default_key] }}
  {%- for key in others_keys %}{%- if key in value %} {{ key }} {{ value[key] }}{%- endif -%}{% endfor -%}
{%- endif %}
{%- endif -%}
{% endmacro -%}
# ntpd configuration file, see ntpd.conf(5)

# Addresses to listen on (ntpd does not listen by default)
{%- for listen in salt['pillar.get']('openntpd:listen', []) %}
listen on {{ get_values(listen, 'address', ['rtable']) }}
{%- else %}
#listen on *
{%- endfor %}

# sync to a single server
{%- for server in salt['pillar.get']('openntpd:server', []) %}
server {{ get_values(server, 'address', ['weight', 'rtable']) }}
{%- else %}
#server ntp.example.org
{%- endfor %}

# use a random selection of NTP Pool Time Servers
# see http://support.ntp.org/bin/view/Servers/NTPPoolServers
{%- for servers in salt['pillar.get']('openntpd:servers', []) %}
servers {{ get_values(servers, 'address', ['weight', 'rtable']) }}
{%- else %}
#servers ntp.pool.ntp.org
{%- endfor %}

# use a specific local timedelta sensor (radio clock, etc)
{%- for sensor in salt['pillar.get']('openntpd:sensor', []) %}
sensor {{ get_values(servers, 'device', ['correction', 'weight', 'refid', 'stratum']) }}
{%- else %}
#sensor nmea0
#sensor *
{%- endfor %}
